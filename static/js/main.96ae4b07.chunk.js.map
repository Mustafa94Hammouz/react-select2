{"version":3,"sources":["components/List/List.js","components/Search/Search.js","components/chips/chips.js","react-select2/react-select2.js","App.js","serviceWorker.js","index.js"],"names":["List","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectUser","bind","assertThisInitialized","user","type","selectedUsersArray","some","item","selectedSingleUser","_this$props","setSelectedSingleUser","setSelectedUsersArray","checkIfSelected","index","indexOf","splice","concat","toConsumableArray","_this2","react_default","a","createElement","className","id","query","filteredUsers","length","map","onClick","value","key","Component","Search","state","filterUsers","e","users","filter","toLowerCase","search","target","setState","onChange","name","placeholder","Chips","handleDelete","deletingChip","Chip_default","icon","Face_default","label","onDelete","color","_this3","Paper_default","single","multi","ReactSelect","getQuery","selectedUsers","selectedUser","chips_chips","components_Search_Search","components_List_List","App","react_select2","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96ae4b07.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './List.css';\r\nclass List extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.selectUser = this.selectUser.bind(this);\r\n    }\r\n\r\n    checkIfSelected(user) {\r\n        if(this.props.type === 'multi') {\r\n            return this.props.selectedUsersArray.some(item => user === item);\r\n        }\r\n        if(this.props.type === 'single') {\r\n            return this.props.selectedSingleUser === user;\r\n        }\r\n    }\r\n\r\n    selectUser(user){\r\n      const {setSelectedSingleUser, setSelectedUsersArray, selectedUsersArray} = this.props;\r\n\r\n        if(this.props.type === 'single'){\r\n            if(this.checkIfSelected(user)) {\r\n                setSelectedSingleUser(null);\r\n            }else{\r\n                setSelectedSingleUser(user);\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'multi') {\r\n            if (this.checkIfSelected(user)) {\r\n                let index = selectedUsersArray.indexOf(user);\r\n                selectedUsersArray.splice(index, 1);\r\n                setSelectedUsersArray(selectedUsersArray);\r\n            } else {\r\n                setSelectedUsersArray([...selectedUsersArray,user])\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filtered = () => (this.props.filteredUsers.map((user, index)=>(\r\n            <li className={this.checkIfSelected(user) ? 'selected' : ''} onClick={()=>this.selectUser(user)} value={user} key={ index }> { user } </li>\r\n        )));\r\n\r\n        const noResults = () => (<p id='noResults'> NO RESULTS !</p>);\r\n\r\n\r\n\r\n        return (\r\n            <div className='listContainer' id='style-2'>\r\n                {this.props.query ==='' ? null  : this.props.filteredUsers.length < 1 && this.props.query !== '' ? noResults() : filtered()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport './Search.css';\r\n\r\nclass Search extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            filteredUsers:[]\r\n        };\r\n        this.filterUsers = this.filterUsers.bind(this);\r\n    }\r\n\r\n    filterUsers(e){\r\n        let filteredUsers = this.props.users;\r\n        filteredUsers = filteredUsers.filter(function(item){\r\n            return item.toLowerCase().search(\r\n                e.target.value.toLowerCase()) !== -1;\r\n        });\r\n        this.setState({filteredUsers: filteredUsers},()=> {\r\n            this.props.filteredUsers(filteredUsers);\r\n        });\r\n        this.props.query( e.target.value.toLowerCase());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input className='input' type='text' onChange={this.filterUsers} value={this.state.name} placeholder=\"UserName\" />\r\n               );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import Paper from \"@material-ui/core/Paper/Paper\";\r\nimport Chip from \"@material-ui/core/Chip/Chip\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport React, { Component } from 'react';\r\nimport './chips.css';\r\n\r\nclass Chips extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleDelete(e){\r\n        this.props.deletingChip(e);\r\n    }\r\n\r\n     multi(){\r\n            return this.props.selectedUsersArray.map((user, index) => {\r\n                return <Chip\r\n                    className='chip'\r\n                    key={index}\r\n                    icon={<FaceIcon/>}\r\n                    label={user}\r\n                    onDelete={() => this.handleDelete(user)}\r\n                    color={\"secondary\"}\r\n\r\n                />\r\n\r\n        })\r\n    }\r\n    single() {\r\n        return <Chip\r\n            className='chip'\r\n            icon={<FaceIcon/>}\r\n            label={this.props.selectedSingleUser}\r\n            onDelete={() => this.handleDelete(this.props.selectedSingleUser)}\r\n            color={\"secondary\"}\r\n        />\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n                <Paper className='chipsContainer'>\r\n                    {this.props.type === 'single' && this.props.selectedSingleUser ? this.single() : this.multi()}\r\n                </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chips;\r\n","import React, { Component } from 'react';\r\nimport List from \"../components/List/List\"\r\nimport Search from \"../components/Search/Search\";\r\nimport Chips from \"../components/chips/chips\";\r\n\r\nclass ReactSelect extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            users: this.props.users,\r\n            filteredUsers:[],\r\n            query:'',\r\n            selectedUsersArray:[],\r\n            selectedSingleUser:''\r\n\r\n        };\r\n        this.filteredUsers = this.filteredUsers.bind(this);\r\n        this.getQuery = this.getQuery.bind(this);\r\n        this.setSelectedUsersArray = this.setSelectedUsersArray.bind(this);\r\n        this.setSelectedSingleUser = this.setSelectedSingleUser.bind(this);\r\n        this.deletingChip = this.deletingChip.bind(this);\r\n    }\r\n\r\n    filteredUsers(users){\r\n        this.setState({\r\n            filteredUsers: users\r\n        })\r\n    }\r\n    getQuery(query){\r\n        this.setState({\r\n            query: query\r\n        })\r\n    }\r\n    setSelectedUsersArray(selectedUsers){\r\n        this.setState({\r\n            selectedUsersArray: selectedUsers\r\n        })\r\n    }\r\n    setSelectedSingleUser(selectedUser){\r\n        this.setState({\r\n            selectedSingleUser: selectedUser\r\n        })\r\n    }\r\n\r\n    deletingChip(user){\r\n        if(this.props.type === 'multi'){\r\n        const {selectedUsersArray} = this.state;\r\n        let index = selectedUsersArray.indexOf(user);\r\n        selectedUsersArray.splice(index,1);\r\n        this.setState({\r\n            selectedUsersArray: selectedUsersArray\r\n        });\r\n        }\r\n        if(this.props.type === 'single'){\r\n            this.setState({\r\n                selectedSingleUser:''\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n\r\n\r\n                    <div className='container'>\r\n\r\n                        <div className=\"textArea\">\r\n                            <Chips selectedUsersArray={this.state.selectedUsersArray} selectedSingleUser={this.state.selectedSingleUser}  deletingChip={this.deletingChip} type={this.props.type}/>\r\n                            <Search users={this.state.users} filteredUsers={this.filteredUsers} query={this.getQuery} selectedUsers={this.state.selectedUsers}/>\r\n                        </div>\r\n                        <List\r\n                            users={this.state.users}\r\n                            selectedSingleUser = {this.state.selectedSingleUser}\r\n                            selectedUsersArray = {this.state.selectedUsersArray}\r\n                            setSelectedUsersArray={this.setSelectedUsersArray}\r\n                            setSelectedSingleUser={this.setSelectedSingleUser}\r\n                            filteredUsers={this.state.filteredUsers}\r\n                            query={this.state.query}\r\n                            type={this.props.type}/>\r\n                    </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReactSelect;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport ReactSelect from \"./react-select2/react-select2\";\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            users: ['Mustafa', 'Wajid','Hamzah', 'Zaareer', 'Ahmad', 'Rayyan', 'Imad', 'Georg', 'Alaska'],\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App-header\">\r\n\r\n            <div className='single'>\r\n                <h1>Single</h1>\r\n                <ReactSelect\r\n                    type='single'\r\n                    users={this.state.users}\r\n                />\r\n            </div>\r\n                <div className='multi'>\r\n                    <h1>Multi</h1>\r\n                    <ReactSelect\r\n                    type='multi'\r\n                    users={this.state.users}\r\n                />\r\n            </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}